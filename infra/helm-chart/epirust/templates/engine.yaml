apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.engine.fullname }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
spec:
  completions: {{ .Values.engine.spec.completions }}
  parallelism: {{ .Values.engine.spec.parallelism }}
  completionMode: Indexed
  template:
    spec:
      containers:
        - name: {{ .Values.engine.fullname }}
          image: {{ .Values.engine.image.repository }}:{{ .Values.engine.image.tag }}
          imagePullPolicy: {{ .Values.engine.image.pullPolicy }}
          command: [ "/bin/sh", "-c" ]
          args:
          {{ if .Values.multiengineSim }}
            [ "jq .travel_plan.regions[$(JOB_COMPLETION_INDEX)] config/{{ .Values.config }} | xargs ./epirust -d -i" ]
          {{ else }}
            [ "./epirust -c config/{{ .Values.config }}" ]
          {{ end }}
          resources:
            requests:
              cpu: {{ .Values.engine.resources.requests.cpu }}
#              memory: {{ .Values.engine.resources.requests.memory }}
            limits:
              cpu: {{ .Values.engine.resources.limits.cpu }}
#              memory: {{ .Values.engine.resources.limits.memory }}
          volumeMounts:
            - mountPath: output
              name: {{ .Values.engine.volumes.name }}
              subPath: {{ .Values.engine.volumeMounts.output.subPath }}
            - mountPath: config
              name: {{ .Values.engine.volumes.name }}
              subPath: {{ .Values.engine.volumeMounts.config.subPath }}
          env:
          {{- include "helpers.list-engine-env-variables" . | indent 8 }}
      restartPolicy: Never
      volumes:
        - name: {{ .Values.engine.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.engine.volumes.claimName }}

