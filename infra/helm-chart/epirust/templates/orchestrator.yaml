{{ if .Values.multiengineSim }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.orchestrator.fullname }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
spec:
  template:
    spec:
      containers:
        - name: {{ .Values.orchestrator.fullname }}
          image: {{ .Values.orchestrator.image.repository }}:{{ .Values.orchestrator.image.tag }}
          imagePullPolicy: {{.Values.orchestrator.image.pullPolicy}}
          command: ["./epirust-orchestrator", "-c", "{{ .Values.storage.volumeMounts.config.mountPath }}/{{ .Values.config }}"]
          resources:
            requests:
              cpu: {{ .Values.orchestrator.resources.requests.cpu }}
              memory: {{ .Values.orchestrator.resources.requests.memory }}
            limits:
              cpu: {{ .Values.orchestrator.resources.limits.cpu }}
              memory: {{ .Values.orchestrator.resources.limits.memory }}
          volumeMounts:
            - mountPath: {{ .Values.storage.volumeMounts.config.mountPath }}
              name: {{ .Values.storage.volumes.name }}
              subPath: {{ .Values.storage.volumeMounts.config.subPath }}
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
            runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
            allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
            runAsUser: {{ .Values.securityContext.runAsUser }}
            runAsGroup: {{ .Values.securityContext.runAsGroup }}
            seccompProfile:
              type: {{ .Values.securityContext.seccompProfile.type }}
          env:
          {{- include "helpers.list-orchestrator-env-variables" . | indent 8 }}
      restartPolicy: Never
      volumes:
        - name: {{ .Values.storage.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.volumes.claimName }}
{{end}}
